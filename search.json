[{"path":[]},{"path":"https://www.csids.no/plnr/articles/adding_analyses.html","id":"broad-technical-terms","dir":"Articles","previous_headings":"Core Concepts","what":"Broad technical terms","title":"Adding analyses to a plan","text":"fundamental units scheduled plnr: 1 argset data (named list) argset (named list) overarching “scheduler”: 1 data pull 1 list analyses","code":""},{"path":[]},{"path":[]},{"path":"https://www.csids.no/plnr/articles/adding_analyses.html","id":"single-function-plan","dir":"Articles","previous_headings":"","what":"Single-function plan","title":"Adding analyses to a plan","text":"approach generally used : multiple strata (e.g. locations, age groups) need apply statistical methods . multiple variables (e.g. multiple exposures, multiple outcomes) want apply statistical methods . apply function multiple times, preferable add argsets first, apply analysis function just running analyses.","code":""},{"path":"https://www.csids.no/plnr/articles/adding_analyses.html","id":"multiple-strata","dir":"Articles","previous_headings":"Single-function plan","what":"Multiple strata","title":"Adding analyses to a plan","text":"example, loop multiple geographical locations apply graphing function data geographical locations.","code":"library(ggplot2) library(data.table) library(magrittr)  # We begin by defining a new plan p <- plnr::Plan$new()  # Data function data_fn <- function(){   return(plnr::nor_covid19_cases_by_time_location) }  # We add sources of data # We can add data directly p$add_data(   name = \"covid19_cases\",   fn_name = \"data_fn\" )  p$get_data() ## $covid19_cases ##        granularity_time granularity_geo country_iso3 location_code border ##                  <char>          <char>       <char>        <char>  <int> ##     1:              day          county          nor  county_nor03   2020 ##     2:              day          county          nor  county_nor03   2020 ##     3:              day          county          nor  county_nor03   2020 ##     4:              day          county          nor  county_nor03   2020 ##     5:              day          county          nor  county_nor03   2020 ##    ---                                                                    ## 11024:          isoweek          nation          nor    nation_nor   2020 ## 11025:          isoweek          nation          nor    nation_nor   2020 ## 11026:          isoweek          nation          nor    nation_nor   2020 ## 11027:          isoweek          nation          nor    nation_nor   2020 ## 11028:          isoweek          nation          nor    nation_nor   2020 ##           age    sex isoyear isoweek isoyearweek    season seasonweek calyear ##        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> ##     1:  total  total    2020       8     2020-08 2019/2020         31    2020 ##     2:  total  total    2020       8     2020-08 2019/2020         31    2020 ##     3:  total  total    2020       8     2020-08 2019/2020         31    2020 ##     4:  total  total    2020       9     2020-09 2019/2020         32    2020 ##     5:  total  total    2020       9     2020-09 2019/2020         32    2020 ##    ---                                                                        ## 11024:  total  total    2022      14     2022-14 2021/2022         37      NA ## 11025:  total  total    2022      15     2022-15 2021/2022         38      NA ## 11026:  total  total    2022      16     2022-16 2021/2022         39      NA ## 11027:  total  total    2022      17     2022-17 2021/2022         40      NA ## 11028:  total  total    2022      18     2022-18 2021/2022         41      NA ##        calmonth calyearmonth       date covid19_cases_testdate_n ##           <int>       <char>     <Date>                    <int> ##     1:        2     2020-M02 2020-02-21                        0 ##     2:        2     2020-M02 2020-02-22                        0 ##     3:        2     2020-M02 2020-02-23                        0 ##     4:        2     2020-M02 2020-02-24                        0 ##     5:        2     2020-M02 2020-02-25                        0 ##    ---                                                           ## 11024:       NA         <NA> 2022-04-10                     6888 ## 11025:       NA         <NA> 2022-04-17                     3635 ## 11026:       NA         <NA> 2022-04-24                     3764 ## 11027:       NA         <NA> 2022-05-01                     2243 ## 11028:       NA         <NA> 2022-05-08                      502 ##        covid19_cases_testdate_pr100000 ##                                  <num> ##     1:                        0.000000 ##     2:                        0.000000 ##     3:                        0.000000 ##     4:                        0.000000 ##     5:                        0.000000 ##    ---                                 ## 11024:                      126.961423 ## 11025:                       67.001274 ## 11026:                       69.379036 ## 11027:                       41.343564 ## 11028:                        9.252996 ##  ## $hash ## $hash$current ## [1] \"cbb5d442160f26df4c2d9a4fec794fd7\" ##  ## $hash$current_elements ## $hash$current_elements$covid19_cases ## [1] \"7f1b0a581386e75e907bffd94938a3a7\" location_codes <- p$get_data()$covid19_cases$location_code %>%   unique() %>%    print() ##  [1] \"county_nor03\" \"county_nor11\" \"county_nor15\" \"county_nor18\" \"county_nor30\" ##  [6] \"county_nor34\" \"county_nor38\" \"county_nor42\" \"county_nor46\" \"county_nor50\" ## [11] \"county_nor54\" \"nation_nor\" p$add_argset_from_list(   plnr::expand_list(     location_code = location_codes,     granularity_time = \"isoweek\"   ) ) # Examine the argsets that are available p$get_argsets_as_dt() ##                            name_analysis index_analysis location_code ##                                   <char>          <int>        <list> ##  1: 5b545e30-a316-44e7-b8f5-408985c7d3cc              1  county_nor03 ##  2: 1eccd370-8bb6-4157-9812-f654ffffd17b              2  county_nor11 ##  3: fac2089b-82bd-4567-ae84-ef581a4bab09              3  county_nor15 ##  4: ed4fe9d2-8736-42a5-82fa-beca87d32855              4  county_nor18 ##  5: 14464d75-9a58-4d7f-8a2e-ad88993d4afa              5  county_nor30 ##  6: 6370fff0-0755-49de-80a1-87f9354a5eff              6  county_nor34 ##  7: 6ac31ec3-f86b-440f-91c4-5d16ed86bd28              7  county_nor38 ##  8: 53ded843-564d-4e57-b884-ca2507b7aa76              8  county_nor42 ##  9: ff5aaeac-79d4-41b0-b9c4-63de7d3f55dd              9  county_nor46 ## 10: f42d4ff9-c69b-4824-9f7d-d44bddcf83cf             10  county_nor50 ## 11: 3ffa0050-cbeb-4737-a9b6-34f40c0309c3             11  county_nor54 ## 12: 08462fb8-c732-45b7-91d2-20adb8866777             12    nation_nor ##     granularity_time ##               <list> ##  1:          isoweek ##  2:          isoweek ##  3:          isoweek ##  4:          isoweek ##  5:          isoweek ##  6:          isoweek ##  7:          isoweek ##  8:          isoweek ##  9:          isoweek ## 10:          isoweek ## 11:          isoweek ## 12:          isoweek # We can then add a simple analysis that returns a figure:  # To do this, we first need to create an action function # (takes two arguments -- data and argset) action_fn <- function(data, argset){   if(plnr::is_run_directly()){     data <- p$get_data()     argset <- p$get_argset(1)   }   pd <- data$covid19_cases[     location_code == argset$location_code &     granularity_time == argset$granularity_time   ]      q <- ggplot(pd, aes(x=date, y=covid19_cases_testdate_n))   q <- q + geom_line()   q <- q + labs(title = argset$location_code)   q }  p$apply_action_fn_to_all_argsets(fn_name = \"action_fn\")  p$run_one(1) q <- p$run_all() q[[1]] q[[2]]"},{"path":"https://www.csids.no/plnr/articles/adding_analyses.html","id":"multiple-variables","dir":"Articles","previous_headings":"Single-function plan","what":"Multiple variables","title":"Adding analyses to a plan","text":"example, loop multiple variable combinations (1. raw numbers Covid-19 cases vs Covid-19 cases per 100 000 population, 2. aggregating isoweek vs day) apply graphing function data according variable combinations.","code":"library(ggplot2) library(data.table) library(magrittr)  # We begin by defining a new plan p <- plnr::Plan$new()  # Data function data_fn <- function(){   return(plnr::nor_covid19_cases_by_time_location[location_code==\"nation_nor\"]) }  # We add sources of data # We can add data directly p$add_data(   name = \"covid19_cases\",   fn_name = \"data_fn\" )  p$get_data() ## $covid19_cases ##      granularity_time granularity_geo country_iso3 location_code border    age ##                <char>          <char>       <char>        <char>  <int> <char> ##   1:              day          nation          nor    nation_nor   2020  total ##   2:              day          nation          nor    nation_nor   2020  total ##   3:              day          nation          nor    nation_nor   2020  total ##   4:              day          nation          nor    nation_nor   2020  total ##   5:              day          nation          nor    nation_nor   2020  total ##  ---                                                                           ## 915:          isoweek          nation          nor    nation_nor   2020  total ## 916:          isoweek          nation          nor    nation_nor   2020  total ## 917:          isoweek          nation          nor    nation_nor   2020  total ## 918:          isoweek          nation          nor    nation_nor   2020  total ## 919:          isoweek          nation          nor    nation_nor   2020  total ##         sex isoyear isoweek isoyearweek    season seasonweek calyear calmonth ##      <char>   <int>   <int>      <char>    <char>      <num>   <int>    <int> ##   1:  total    2020       8     2020-08 2019/2020         31    2020        2 ##   2:  total    2020       8     2020-08 2019/2020         31    2020        2 ##   3:  total    2020       8     2020-08 2019/2020         31    2020        2 ##   4:  total    2020       9     2020-09 2019/2020         32    2020        2 ##   5:  total    2020       9     2020-09 2019/2020         32    2020        2 ##  ---                                                                          ## 915:  total    2022      14     2022-14 2021/2022         37      NA       NA ## 916:  total    2022      15     2022-15 2021/2022         38      NA       NA ## 917:  total    2022      16     2022-16 2021/2022         39      NA       NA ## 918:  total    2022      17     2022-17 2021/2022         40      NA       NA ## 919:  total    2022      18     2022-18 2021/2022         41      NA       NA ##      calyearmonth       date covid19_cases_testdate_n ##            <char>     <Date>                    <int> ##   1:     2020-M02 2020-02-21                        1 ##   2:     2020-M02 2020-02-22                        0 ##   3:     2020-M02 2020-02-23                        0 ##   4:     2020-M02 2020-02-24                        0 ##   5:     2020-M02 2020-02-25                        0 ##  ---                                                  ## 915:         <NA> 2022-04-10                     6888 ## 916:         <NA> 2022-04-17                     3635 ## 917:         <NA> 2022-04-24                     3764 ## 918:         <NA> 2022-05-01                     2243 ## 919:         <NA> 2022-05-08                      502 ##      covid19_cases_testdate_pr100000 ##                                <num> ##   1:                      0.01863037 ##   2:                      0.00000000 ##   3:                      0.00000000 ##   4:                      0.00000000 ##   5:                      0.00000000 ##  ---                                 ## 915:                    126.96142312 ## 916:                     67.00127367 ## 917:                     69.37903551 ## 918:                     41.34356447 ## 919:                      9.25299570 ##  ## $hash ## $hash$current ## [1] \"0ad573d37712f0a8ab666846d1b721a1\" ##  ## $hash$current_elements ## $hash$current_elements$covid19_cases ## [1] \"07cc51795bccaf2afebe48619ce87227\" p$add_argset_from_list(   plnr::expand_list(     variable = c(\"covid19_cases_testdate_n\", \"covid19_cases_testdate_pr100000\"),     granularity_time = c(\"isoweek\",\"day\")   ) ) # Examine the argsets that are available p$get_argsets_as_dt() ##                           name_analysis index_analysis ##                                  <char>          <int> ## 1: 28d0fe8c-ca15-499f-9f40-1feb5fa3639c              1 ## 2: d704e222-8f9c-4fda-90be-3227983eac22              2 ## 3: b5736604-d86a-4f72-afc7-3a522ded2ef0              3 ## 4: fd8f4002-a908-4838-b034-f48f51721914              4 ##                           variable granularity_time ##                             <list>           <list> ## 1:        covid19_cases_testdate_n          isoweek ## 2: covid19_cases_testdate_pr100000          isoweek ## 3:        covid19_cases_testdate_n              day ## 4: covid19_cases_testdate_pr100000              day # We can then add a simple analysis that returns a figure:  # To do this, we first need to create an action function # (takes two arguments -- data and argset) action_fn <- function(data, argset){   if(plnr::is_run_directly()){     data <- p$get_data()     argset <- p$get_argset(1)   }   pd <- data$covid19_cases[     granularity_time == argset$granularity_time   ]      q <- ggplot(pd, aes_string(x=\"date\", y=argset$variable))   q <- q + geom_line()   q <- q + labs(title = argset$granularity_time)   q }  p$apply_action_fn_to_all_argsets(fn_name = \"action_fn\")  p$run_one(1) ## Warning: `aes_string()` was deprecated in ggplot2 3.0.0. ## ℹ Please use tidy evaluation idioms with `aes()`. ## ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. p$run_one(2) p$run_one(3) p$run_one(4)"},{"path":"https://www.csids.no/plnr/articles/adding_analyses.html","id":"multi-function-plan","dir":"Articles","previous_headings":"","what":"Multi-function plan","title":"Adding analyses to a plan","text":"approach generally used creating output report, need multiple different tables graphs.","code":"library(ggplot2) library(data.table) library(magrittr)  # We begin by defining a new plan p <- plnr::Plan$new()  # Data function data_fn <- function(){   return(plnr::nor_covid19_cases_by_time_location) }  # We add sources of data # We can add data directly p$add_data(   name = \"covid19_cases\",   fn_name = \"data_fn\" )  p$get_data() ## $covid19_cases ## Indices: <granularity_time__location_code>, <location_code> ##        granularity_time granularity_geo country_iso3 location_code border ##                  <char>          <char>       <char>        <char>  <int> ##     1:              day          county          nor  county_nor03   2020 ##     2:              day          county          nor  county_nor03   2020 ##     3:              day          county          nor  county_nor03   2020 ##     4:              day          county          nor  county_nor03   2020 ##     5:              day          county          nor  county_nor03   2020 ##    ---                                                                    ## 11024:          isoweek          nation          nor    nation_nor   2020 ## 11025:          isoweek          nation          nor    nation_nor   2020 ## 11026:          isoweek          nation          nor    nation_nor   2020 ## 11027:          isoweek          nation          nor    nation_nor   2020 ## 11028:          isoweek          nation          nor    nation_nor   2020 ##           age    sex isoyear isoweek isoyearweek    season seasonweek calyear ##        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> ##     1:  total  total    2020       8     2020-08 2019/2020         31    2020 ##     2:  total  total    2020       8     2020-08 2019/2020         31    2020 ##     3:  total  total    2020       8     2020-08 2019/2020         31    2020 ##     4:  total  total    2020       9     2020-09 2019/2020         32    2020 ##     5:  total  total    2020       9     2020-09 2019/2020         32    2020 ##    ---                                                                        ## 11024:  total  total    2022      14     2022-14 2021/2022         37      NA ## 11025:  total  total    2022      15     2022-15 2021/2022         38      NA ## 11026:  total  total    2022      16     2022-16 2021/2022         39      NA ## 11027:  total  total    2022      17     2022-17 2021/2022         40      NA ## 11028:  total  total    2022      18     2022-18 2021/2022         41      NA ##        calmonth calyearmonth       date covid19_cases_testdate_n ##           <int>       <char>     <Date>                    <int> ##     1:        2     2020-M02 2020-02-21                        0 ##     2:        2     2020-M02 2020-02-22                        0 ##     3:        2     2020-M02 2020-02-23                        0 ##     4:        2     2020-M02 2020-02-24                        0 ##     5:        2     2020-M02 2020-02-25                        0 ##    ---                                                           ## 11024:       NA         <NA> 2022-04-10                     6888 ## 11025:       NA         <NA> 2022-04-17                     3635 ## 11026:       NA         <NA> 2022-04-24                     3764 ## 11027:       NA         <NA> 2022-05-01                     2243 ## 11028:       NA         <NA> 2022-05-08                      502 ##        covid19_cases_testdate_pr100000 ##                                  <num> ##     1:                        0.000000 ##     2:                        0.000000 ##     3:                        0.000000 ##     4:                        0.000000 ##     5:                        0.000000 ##    ---                                 ## 11024:                      126.961423 ## 11025:                       67.001274 ## 11026:                       69.379036 ## 11027:                       41.343564 ## 11028:                        9.252996 ##  ## $hash ## $hash$current ## [1] \"0306cac791d5f990073167e17ed15f9b\" ##  ## $hash$current_elements ## $hash$current_elements$covid19_cases ## [1] \"bad75e8e213b3de3eee2b4ecbf157f46\" # Completely unique function for figure 1 p$add_analysis(   name = \"figure_1\",   fn_name = \"figure_1\" )  figure_1 <- function(data, argset){   if(plnr::is_run_directly()){     data <- p$get_data()     argset <- p$get_argset(\"figure_1\")   }   pd <- data$covid19_cases[     granularity_time == \"isoweek\"   ]      q <- ggplot(pd, aes_string(x=\"date\", y=\"covid19_cases_testdate_pr100000\"))   q <- q + geom_line()   q <- q + facet_wrap(~location_code)   q <- q + labs(title = \"Weekly covid-19 cases per 100 000 population\")   q }  # Reusing a function for figures 2 and 3 p$add_analysis(   name = \"figure_2\",   fn_name = \"plot_epicurve_by_location\",   location_code = \"nation_nor\" )  # Reusing a function for figures 2 and 3 p$add_analysis(   name = \"figure_3\",   fn_name = \"plot_epicurve_by_location\",   location_code = \"county_nor03\" )  plot_epicurve_by_location <- function(data, argset){   if(plnr::is_run_directly()){     data <- p$get_data()     argset <- p$get_argset(\"figure_2\")     argset <- p$get_argset(\"figure_3\")   }   pd <- data$covid19_cases[     granularity_time == \"isoweek\" &      location_code == argset$location_code   ]      q <- ggplot(pd, aes_string(x=\"date\", y=\"covid19_cases_testdate_n\"))   q <- q + geom_line()   q <- q + labs(title = argset$location_code)   q }  p$run_one(\"figure_1\") p$run_one(\"figure_2\") p$run_one(\"figure_3\")"},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to plnr","text":"plnr framework planning executing analyses R. ’s designed help organize run multiple analyses efficiently, whether ’re applying function different arguments running multiple different functions data.","code":""},{"path":[]},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"broad-technical-terms","dir":"Articles","previous_headings":"Introduction > Core Concepts","what":"Broad technical terms","title":"Introduction to plnr","text":"fundamental units scheduled plnr: 1 argset data (named list) argset (named list) overarching “scheduler”: 1 data pull 1 list analyses","code":""},{"path":[]},{"path":[]},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"basic-usage","dir":"Articles","previous_headings":"Introduction","what":"Basic Usage","title":"Introduction to plnr","text":"Let’s start simple example demonstrates core concepts:","code":"library(plnr) ## plnr 2025.3.19 ## https://www.csids.no/plnr/ library(ggplot2) library(data.table)  # Create a new plan p <- Plan$new()  # Add data p$add_data(   name = \"deaths\",   direct = data.table(deaths=1:4, year=2001:2004) )  # Add argsets for different years p$add_argset(   name = \"fig_1_2002\",   year_max = 2002 )  p$add_argset(   name = \"fig_1_2003\",   year_max = 2003 )  # Define analysis function fn_fig_1 <- function(data, argset) {   plot_data <- data$deaths[year <= argset$year_max]      ggplot(plot_data, aes(x=year, y=deaths)) +     geom_line() +     geom_point(size=3) +     labs(title = glue::glue(\"Deaths from 2001 until {argset$year_max}\")) }  # Apply function to all argsets p$apply_action_fn_to_all_argsets(fn_name = \"fn_fig_1\")  # Run analyses p$run_one(\"fig_1_2002\")"},{"path":[]},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"data-management","dir":"Articles","previous_headings":"Introduction > Advanced Features","what":"Data Management","title":"Introduction to plnr","text":"framework ensures efficient data management : - Loading data reusing across analyses - Separating data cleaning analysis - Providing hash-based tracking data changes","code":""},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"debugging-tools","dir":"Articles","previous_headings":"Introduction > Advanced Features","what":"Debugging Tools","title":"Introduction to plnr","text":"plnr includes several tools help development debugging:","code":"# Access data directly p$get_data() ## $deaths ##    deaths  year ##     <int> <int> ## 1:      1  2001 ## 2:      2  2002 ## 3:      3  2003 ## 4:      4  2004 ##  ## $hash ## $hash$current ## [1] \"aa2296ddc2b519c9c2a3d1a39471ac9e\" ##  ## $hash$current_elements ## $hash$current_elements$deaths ## [1] \"82519debaef80054a7b2ed512f8dfb94\" # Access specific argset p$get_argset(\"fig_1_2002\") ## $year_max ## [1] 2002 # Access analysis by name or index p$get_analysis(1) ## $argset ## $argset$year_max ## [1] 2002 ##  ## $argset$index_analysis ## [1] 1 ##  ##  ## $fn_name ## [1] \"fn_fig_1\" # Use is_run_directly() for development fn_analysis <- function(data, argset) {   if(plnr::is_run_directly()) {     data <- p$get_data()     argset <- p$get_argset(\"fig_1_2002\")   }      # function continues here }"},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"function-naming","dir":"Articles","previous_headings":"Introduction > Advanced Features","what":"Function Naming","title":"Introduction to plnr","text":"adding analyses, can use either fn_name fn:","code":"# Using fn_name (recommended) p$add_analysis(   name = \"fig_1_2002\",   fn_name = \"fn_fig_1\",   year_max = 2002 )  # Using fn (for function factories) p$add_analysis(   name = \"fig_1_2003\",   fn = fn_fig_1,   year_max = 2003 )"},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"hash-based-caching","dir":"Articles","previous_headings":"Introduction > Advanced Features","what":"Hash-based Caching","title":"Introduction to plnr","text":"framework uses hashing track data changes:","code":"# Create two plans with same data p1 <- Plan$new() p1$add_data(direct = data.table(deaths=1:4, year=2001:2004), name = \"deaths\") p1$add_data(direct = data.table(deaths=1:4, year=2001:2004), name = \"deaths2\")  p2 <- Plan$new() p2$add_data(direct = data.table(deaths=1:4, year=2001:2004), name = \"deaths\") p2$add_data(direct = data.table(deaths=1:4, year=2001:2004), name = \"deaths2\")  # Same data has same hash identical(p1$get_data()$hash$current_elements, p2$get_data()$hash$current_elements) ## [1] TRUE # Different data has different hash p1$add_data(direct = data.table(deaths=1:5, year=2001:2005), name = \"deaths3\") p1$get_data()$hash$current_elements ## $deaths ## [1] \"82519debaef80054a7b2ed512f8dfb94\" ##  ## $deaths2 ## [1] \"82519debaef80054a7b2ed512f8dfb94\" ##  ## $deaths3 ## [1] \"d740b5c163d702dde31061bcd9e00716\""},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"best-practices","dir":"Articles","previous_headings":"Introduction","what":"Best Practices","title":"Introduction to plnr","text":"Keep data cleaning separate analysis Use meaningful names datasets Document data structure assumptions Always accept data argset parameters Use is_run_directly() development Keep functions focused single-purpose Use meaningful names argsets analyses Group related analyses together Document plan structure dependencies Start small examples Use debugging tools development Test analyses individually running full plan","code":""},{"path":"https://www.csids.no/plnr/articles/plnr.html","id":"next-steps","dir":"Articles","previous_headings":"Introduction","what":"Next Steps","title":"Introduction to plnr","text":"Read Adding Analyses vignette detailed examples Check package website additional resources Explore function documentation help(package=\"plnr\")","code":""},{"path":"https://www.csids.no/plnr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Aubrey White. Author, maintainer. . Copyright holder.","code":""},{"path":"https://www.csids.no/plnr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White RA (2025). plnr: Framework Planning Executing Analyses. R package version 2025.3.19, https://github.com/csids/plnr, https://www.csids./plnr/.","code":"@Manual{,   title = {plnr: A Framework for Planning and Executing Analyses},   author = {Richard Aubrey White},   year = {2025},   note = {R package version 2025.3.19, https://github.com/csids/plnr},   url = {https://www.csids.no/plnr/}, }"},{"path":[]},{"path":"https://www.csids.no/plnr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Framework for Planning and Executing Analyses","text":"plnr powerful framework planning executing analyses R. ’s designed scenarios need : Run function multiple times different arguments Execute multiple different functions datasets Create systematic analyses across multiple strata variables","code":""},{"path":"https://www.csids.no/plnr/index.html","id":"key-features","dir":"","previous_headings":"Overview","what":"Key Features","title":"A Framework for Planning and Executing Analyses","text":"Efficient Data Management: Load data reuse across multiple analyses Structured Analysis Planning: Organize analyses clear, maintainable plans Flexible Execution: Support single-function multi-function analysis plans Built-Debugging: Convenient tools development testing Parallel Processing: Optional parallel execution analyses Hash-based Caching: Track data changes optimize execution","code":""},{"path":"https://www.csids.no/plnr/index.html","id":"common-use-cases","dir":"","previous_headings":"Overview","what":"Common Use Cases","title":"A Framework for Planning and Executing Analyses","text":"Applying analysis across multiple strata (e.g., locations, age groups) Running statistical methods multiple variables (e.g., exposures, outcomes) Generating multiple tables graphs reports Creating systematic surveillance analyses","code":""},{"path":[]},{"path":"https://www.csids.no/plnr/index.html","id":"from-cran","dir":"","previous_headings":"Installation","what":"From CRAN","title":"A Framework for Planning and Executing Analyses","text":"","code":"install.packages(\"plnr\")"},{"path":"https://www.csids.no/plnr/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development Version","title":"A Framework for Planning and Executing Analyses","text":"install development version access packages haven’t released CRAN: Edit .Rprofile: Add following configuration: Restart R install:","code":"usethis::edit_r_profile() options(   repos = structure(c(     CSVERSE = \"https://www.csids.no/drat/\",     CRAN    = \"https://cran.rstudio.com\"   )) ) install.packages(\"plnr\")"},{"path":"https://www.csids.no/plnr/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"A Framework for Planning and Executing Analyses","text":"Read introduction vignette Check adding analyses guide Run help(package=\"plnr\") detailed function documentation","code":""},{"path":"https://www.csids.no/plnr/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick Example","title":"A Framework for Planning and Executing Analyses","text":"","code":"library(plnr) library(ggplot2) library(data.table)  # Create a new plan p <- Plan$new()  # Add data p$add_data(   name = \"deaths\",   direct = data.table(deaths=1:4, year=2001:2004) )  # Add analyses for different years p$add_argset(name = \"fig_1_2002\", year_max = 2002) p$add_argset(name = \"fig_1_2003\", year_max = 2003)  # Define analysis function fn_fig_1 <- function(data, argset) {   plot_data <- data$deaths[year <= argset$year_max]   ggplot(plot_data, aes(x=year, y=deaths)) +     geom_line() +     geom_point(size=3) +     labs(title = glue::glue(\"Deaths from 2001 until {argset$year_max}\")) }  # Apply function to all argsets p$apply_action_fn_to_all_argsets(fn_name = \"fn_fig_1\")  # Run analyses p$run_one(\"fig_1_2002\")"},{"path":"https://www.csids.no/plnr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"A Framework for Planning and Executing Analyses","text":"Contributions welcome! Please feel free submit Pull Request.","code":""},{"path":"https://www.csids.no/plnr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A Framework for Planning and Executing Analyses","text":"package licensed MIT License - see LICENSE file details.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Planning and Executing Analyses — Plan","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Plan class provides framework organizing executing multiple analyses one datasets. enforces structured approach analysis : Data Management: Loading data reusing across analyses Separating data cleaning analysis Providing hash-based tracking data changes Analysis Structure: Requiring analyses use data sources Standardizing analysis functions accept data argset parameters Organizing analyses clear, maintainable plans Execution Control: Supporting single-function multi-function analysis plans Providing flexible execution options (sequential parallel) Including built-debugging tools","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Planning and Executing Analyses — Plan","text":"framework uses three main concepts: Argset: named list containing set arguments analysis Analysis: combination one argset one action function Plan: container holds one data pull list analyses","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for Planning and Executing Analyses — Plan","text":"analyses List analyses, containing argset action function","code":""},{"path":[]},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Plan$new() Plan$add_data() Plan$add_argset() Plan$add_argset_from_df() Plan$add_argset_from_list() Plan$add_analysis() Plan$add_analysis_from_df() Plan$add_analysis_from_list() Plan$apply_action_fn_to_all_argsets() Plan$apply_analysis_fn_to_all() Plan$x_length() Plan$x_seq_along() Plan$set_progress() Plan$set_progressor() Plan$set_verbose() Plan$set_use_foreach() Plan$get_data() Plan$get_analysis() Plan$get_argset() Plan$get_argsets_as_dt() Plan$run_one_with_data() Plan$run_one() Plan$run_all_with_data() Plan$run_all() Plan$run_all_progress() Plan$run_all_parallel() Plan$clone()","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Create new Plan instance","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$new(verbose = interactive() | config$force_verbose, use_foreach = FALSE)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"verbose Logical, whether show verbose output. Defaults TRUE interactive mode config$force_verbose TRUE use_foreach Logical, whether use foreach parallel processing. NULL = program decides, FALSE = use loop, TRUE = use foreach","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"new Plan instance","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-data-","dir":"Reference","previous_headings":"","what":"Method add_data()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add new dataset plan","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_data(name, fn = NULL, fn_name = NULL, direct = NULL)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"name Character string, name dataset fn Function returns dataset (optional) fn_name Character string, name function returns dataset (optional) direct Direct dataset object (optional)","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Add data using a function data_fn <- function() { return(plnr::nor_covid19_cases_by_time_location) } p$add_data(\"data_1\", fn = data_fn)  # Add data using a function name p$add_data(\"data_2\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Add data directly p$add_data(\"data_3\", direct = plnr::nor_covid19_cases_by_time_location)  # View added data p$get_data()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-argset-","dir":"Reference","previous_headings":"","what":"Method add_argset()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add new argset plan","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_argset(name = uuid::UUIDgenerate(), ...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"name Character string, name argset (defaults UUID) ... Named arguments comprise argset","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Add argsets with different arguments p$add_argset(\"argset_1\", var_1 = 3, var_b = \"hello\") p$add_argset(\"argset_2\", var_1 = 8, var_c = \"hello2\")  # View added argsets p$get_argsets_as_dt()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-argset-from-df-","dir":"Reference","previous_headings":"","what":"Method add_argset_from_df()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add multiple argsets data frame","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_argset_from_df(df)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"df Data frame row represents new argset","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Create data frame of argsets batch_argset_df <- data.frame(   name = c(\"a\", \"b\", \"c\"),   var_1 = c(1, 2, 3),   var_2 = c(\"i\", \"j\", \"k\") )  # Add argsets from data frame p$add_argset_from_df(batch_argset_df)  # View added argsets p$get_argsets_as_dt()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-argset-from-list-","dir":"Reference","previous_headings":"","what":"Method add_argset_from_list()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add multiple argsets list","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_argset_from_list(l)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"l List lists, inner list represents new argset","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Create list of argsets batch_argset_list <- list(   list(name = \"a\", var_1 = 1, var_2 = \"i\"),   list(name = \"b\", var_1 = 2, var_2 = \"j\"),   list(name = \"c\", var_1 = 3, var_2 = \"k\") )  # Add argsets from list p$add_argset_from_list(batch_argset_list)  # View added argsets p$get_argsets_as_dt()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-analysis-","dir":"Reference","previous_headings":"","what":"Method add_analysis()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add new analysis plan","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_analysis(name = uuid::UUIDgenerate(), fn = NULL, fn_name = NULL, ...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"name Character string, name analysis (defaults UUID) fn Function use analysis (optional) fn_name Character string, name function use (optional) ... Additional arguments added argset","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Add analysis p$add_analysis(   name = \"analysis_1\",   fn_name = \"plnr::example_action_fn\" )  # View argsets and run analysis p$get_argsets_as_dt() p$run_one(\"analysis_1\")"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-analysis-from-df-","dir":"Reference","previous_headings":"","what":"Method add_analysis_from_df()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add multiple analyses data frame","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_analysis_from_df(fn = NULL, fn_name = NULL, df)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"fn Function use analyses (optional) fn_name Character string, name function use (optional) df Data frame row represents new analysis","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Create data frame of analyses batch_argset_df <- data.frame(   name = c(\"a\", \"b\", \"c\"),   var_1 = c(1, 2, 3),   var_2 = c(\"i\", \"j\", \"k\") )  # Add analyses from data frame p$add_analysis_from_df(   fn_name = \"plnr::example_action_fn\",   df = batch_argset_df )  # View argsets and run example p$get_argsets_as_dt() p$run_one(1)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-add-analysis-from-list-","dir":"Reference","previous_headings":"","what":"Method add_analysis_from_list()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Add multiple analyses list","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$add_analysis_from_list(fn = NULL, fn_name = NULL, l)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"fn Function use analyses (optional) fn_name Character string, name function use (optional) l List lists, inner list represents new analysis","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"NULL, modifies plan place","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Create list of analyses batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") )  # Add analyses from list p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list )  # View argsets and run example p$get_argsets_as_dt() p$run_one(\"analysis_1\")"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-apply-action-fn-to-all-argsets-","dir":"Reference","previous_headings":"","what":"Method apply_action_fn_to_all_argsets()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Applies action function argsets","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$apply_action_fn_to_all_argsets(fn = NULL, fn_name = NULL)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"fn Action function. fn_name Action function name. p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list( list(name = \"analysis_1\", var_1 = 1, var_2 = \"\"), list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"), list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_argset_from_list( fn_name = \"plnr::example_action_fn\", l = batch_argset_list ) p$get_argsets_as_dt() p$apply_action_fn_to_all_argsets(fn_name = \"plnr::example_action_fn\") p$run_one(\"analysis_1\")","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-apply-analysis-fn-to-all-","dir":"Reference","previous_headings":"","what":"Method apply_analysis_fn_to_all()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Deprecated. Use apply_action_fn_to_all_argsets.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$apply_analysis_fn_to_all(fn = NULL, fn_name = NULL)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"fn Action function. fn_name Action function name.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-x-length-","dir":"Reference","previous_headings":"","what":"Method x_length()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Number analyses plan.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$x_length()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-x-seq-along-","dir":"Reference","previous_headings":"","what":"Method x_seq_along()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Generate regular sequence 1 length analyses plan.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$x_seq_along()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-set-progress-","dir":"Reference","previous_headings":"","what":"Method set_progress()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Set internal progress bar","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$set_progress(pb)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"pb Progress bar.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-set-progressor-","dir":"Reference","previous_headings":"","what":"Method set_progressor()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Set internal progressor progress bar","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$set_progressor(pb)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"pb progressor progress bar.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-set-verbose-","dir":"Reference","previous_headings":"","what":"Method set_verbose()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Set verbose flag","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$set_verbose(x)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"x Boolean.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-set-use-foreach-","dir":"Reference","previous_headings":"","what":"Method set_use_foreach()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Set use_foreach flag","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$set_use_foreach(x)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"x Boolean.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Extracts data provided via 'add_data' returns named list.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$get_data()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Named list, elements added via add_data. One extra named element called 'hash'. 'hash' contains data hashes particular datasets/variables, calculated using 'spookyhash' algorithm via digest::digest. 'hash' contains two named elements: current (hash entire named list) current_elements (hash named elements within named list)","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") p$get_data()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-get-analysis-","dir":"Reference","previous_headings":"","what":"Method get_analysis()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Extracts analysis plan.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$get_analysis(index_analysis)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"index_analysis Either integer (1:length(analyses)) character string representing name analysis.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"analysis.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$get_analysis(\"analysis_1\")"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-get-argset-","dir":"Reference","previous_headings":"","what":"Method get_argset()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Extracts argset plan.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$get_argset(index_analysis)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"index_analysis Either integer (1:length(analyses)) character string representing name analysis.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"argset","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$get_argset(\"analysis_1\")"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-get-argsets-as-dt-","dir":"Reference","previous_headings":"","what":"Method get_argsets_as_dt()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Gets argsets presents data.table.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$get_argsets_as_dt()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Data.table contains argsets within plan.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$get_argsets_as_dt()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-run-one-with-data-","dir":"Reference","previous_headings":"","what":"Method run_one_with_data()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Run one analysis (data provided user).","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$run_one_with_data(index_analysis, data, ...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"index_analysis Either integer (1:length(analyses)) character string representing name analysis. data Named list (generally obtained p$get_data()). ... used.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Returned value action function.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) data <- p$get_data() p$run_one_with_data(\"analysis_1\", data)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-run-one-","dir":"Reference","previous_headings":"","what":"Method run_one()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Run one analysis (data obtained automatically self$get_data()).","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$run_one(index_analysis, ...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"index_analysis Either integer (1:length(analyses)) character string representing name analysis. ... used.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Returned value action function.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-12","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$run_one(\"analysis_1\")"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-run-all-with-data-","dir":"Reference","previous_headings":"","what":"Method run_all_with_data()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Run analyses (data provided user).","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$run_all_with_data(data, ...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"data Named list (generally obtained p$get_data()). ... used.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"List element contains returned value action function.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-13","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) data <- p$get_data() p$run_all_with_data(data)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-run-all-","dir":"Reference","previous_headings":"","what":"Method run_all()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Run analyses (data obtained automatically self$get_data()).","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$run_all(...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"... used.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"List element contains returned value action function.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-14","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$run_all()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-run-all-progress-","dir":"Reference","previous_headings":"","what":"Method run_all_progress()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Run analyses progress bar (data obtained automatically self$get_data()).","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$run_all_progress(...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"... used.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"List element contains returned value action function.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"examples-15","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$run_all_progress()"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-run-all-parallel-","dir":"Reference","previous_headings":"","what":"Method run_all_parallel()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"Run analyses parallel (data obtained automatically self$get_data()). function works linux computers uses pbmcapply parallel backend.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$run_all_parallel(mc.cores = getOption(\"mc.cores\", 2L), ...)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"mc.cores Number cores used. ... used.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Planning and Executing Analyses — Plan","text":"List element contains returned value action function.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class for Planning and Executing Analyses — Plan","text":"objects class cloneable method.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"Plan$clone(deep = FALSE)"},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Planning and Executing Analyses — Plan","text":"deep Whether make deep clone.","code":""},{"path":"https://www.csids.no/plnr/reference/Plan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Planning and Executing Analyses — Plan","text":"","code":"## ------------------------------------------------ ## Method `Plan$add_data` ## ------------------------------------------------  p <- plnr::Plan$new()  # Add data using a function data_fn <- function() { return(plnr::nor_covid19_cases_by_time_location) } p$add_data(\"data_1\", fn = data_fn)  # Add data using a function name p$add_data(\"data_2\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Add data directly p$add_data(\"data_3\", direct = plnr::nor_covid19_cases_by_time_location)  # View added data p$get_data() #> $data_1 #>        granularity_time granularity_geo country_iso3 location_code border #>                  <char>          <char>       <char>        <char>  <int> #>     1:              day          county          nor  county_nor03   2020 #>     2:              day          county          nor  county_nor03   2020 #>     3:              day          county          nor  county_nor03   2020 #>     4:              day          county          nor  county_nor03   2020 #>     5:              day          county          nor  county_nor03   2020 #>    ---                                                                    #> 11024:          isoweek          nation          nor    nation_nor   2020 #> 11025:          isoweek          nation          nor    nation_nor   2020 #> 11026:          isoweek          nation          nor    nation_nor   2020 #> 11027:          isoweek          nation          nor    nation_nor   2020 #> 11028:          isoweek          nation          nor    nation_nor   2020 #>           age    sex isoyear isoweek isoyearweek    season seasonweek calyear #>        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> #>     1:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     2:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     3:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     4:  total  total    2020       9     2020-09 2019/2020         32    2020 #>     5:  total  total    2020       9     2020-09 2019/2020         32    2020 #>    ---                                                                        #> 11024:  total  total    2022      14     2022-14 2021/2022         37      NA #> 11025:  total  total    2022      15     2022-15 2021/2022         38      NA #> 11026:  total  total    2022      16     2022-16 2021/2022         39      NA #> 11027:  total  total    2022      17     2022-17 2021/2022         40      NA #> 11028:  total  total    2022      18     2022-18 2021/2022         41      NA #>        calmonth calyearmonth       date covid19_cases_testdate_n #>           <int>       <char>     <Date>                    <int> #>     1:        2     2020-M02 2020-02-21                        0 #>     2:        2     2020-M02 2020-02-22                        0 #>     3:        2     2020-M02 2020-02-23                        0 #>     4:        2     2020-M02 2020-02-24                        0 #>     5:        2     2020-M02 2020-02-25                        0 #>    ---                                                           #> 11024:       NA         <NA> 2022-04-10                     6888 #> 11025:       NA         <NA> 2022-04-17                     3635 #> 11026:       NA         <NA> 2022-04-24                     3764 #> 11027:       NA         <NA> 2022-05-01                     2243 #> 11028:       NA         <NA> 2022-05-08                      502 #>        covid19_cases_testdate_pr100000 #>                                  <num> #>     1:                        0.000000 #>     2:                        0.000000 #>     3:                        0.000000 #>     4:                        0.000000 #>     5:                        0.000000 #>    ---                                 #> 11024:                      126.961423 #> 11025:                       67.001274 #> 11026:                       69.379036 #> 11027:                       41.343564 #> 11028:                        9.252996 #>  #> $data_2 #>        granularity_time granularity_geo country_iso3 location_code border #>                  <char>          <char>       <char>        <char>  <int> #>     1:              day          county          nor  county_nor03   2020 #>     2:              day          county          nor  county_nor03   2020 #>     3:              day          county          nor  county_nor03   2020 #>     4:              day          county          nor  county_nor03   2020 #>     5:              day          county          nor  county_nor03   2020 #>    ---                                                                    #> 11024:          isoweek          nation          nor    nation_nor   2020 #> 11025:          isoweek          nation          nor    nation_nor   2020 #> 11026:          isoweek          nation          nor    nation_nor   2020 #> 11027:          isoweek          nation          nor    nation_nor   2020 #> 11028:          isoweek          nation          nor    nation_nor   2020 #>           age    sex isoyear isoweek isoyearweek    season seasonweek calyear #>        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> #>     1:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     2:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     3:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     4:  total  total    2020       9     2020-09 2019/2020         32    2020 #>     5:  total  total    2020       9     2020-09 2019/2020         32    2020 #>    ---                                                                        #> 11024:  total  total    2022      14     2022-14 2021/2022         37      NA #> 11025:  total  total    2022      15     2022-15 2021/2022         38      NA #> 11026:  total  total    2022      16     2022-16 2021/2022         39      NA #> 11027:  total  total    2022      17     2022-17 2021/2022         40      NA #> 11028:  total  total    2022      18     2022-18 2021/2022         41      NA #>        calmonth calyearmonth       date covid19_cases_testdate_n #>           <int>       <char>     <Date>                    <int> #>     1:        2     2020-M02 2020-02-21                        0 #>     2:        2     2020-M02 2020-02-22                        0 #>     3:        2     2020-M02 2020-02-23                        0 #>     4:        2     2020-M02 2020-02-24                        0 #>     5:        2     2020-M02 2020-02-25                        0 #>    ---                                                           #> 11024:       NA         <NA> 2022-04-10                     6888 #> 11025:       NA         <NA> 2022-04-17                     3635 #> 11026:       NA         <NA> 2022-04-24                     3764 #> 11027:       NA         <NA> 2022-05-01                     2243 #> 11028:       NA         <NA> 2022-05-08                      502 #>        covid19_cases_testdate_pr100000 #>                                  <num> #>     1:                        0.000000 #>     2:                        0.000000 #>     3:                        0.000000 #>     4:                        0.000000 #>     5:                        0.000000 #>    ---                                 #> 11024:                      126.961423 #> 11025:                       67.001274 #> 11026:                       69.379036 #> 11027:                       41.343564 #> 11028:                        9.252996 #>  #> $data_3 #>        granularity_time granularity_geo country_iso3 location_code border #>                  <char>          <char>       <char>        <char>  <int> #>     1:              day          county          nor  county_nor03   2020 #>     2:              day          county          nor  county_nor03   2020 #>     3:              day          county          nor  county_nor03   2020 #>     4:              day          county          nor  county_nor03   2020 #>     5:              day          county          nor  county_nor03   2020 #>    ---                                                                    #> 11024:          isoweek          nation          nor    nation_nor   2020 #> 11025:          isoweek          nation          nor    nation_nor   2020 #> 11026:          isoweek          nation          nor    nation_nor   2020 #> 11027:          isoweek          nation          nor    nation_nor   2020 #> 11028:          isoweek          nation          nor    nation_nor   2020 #>           age    sex isoyear isoweek isoyearweek    season seasonweek calyear #>        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> #>     1:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     2:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     3:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     4:  total  total    2020       9     2020-09 2019/2020         32    2020 #>     5:  total  total    2020       9     2020-09 2019/2020         32    2020 #>    ---                                                                        #> 11024:  total  total    2022      14     2022-14 2021/2022         37      NA #> 11025:  total  total    2022      15     2022-15 2021/2022         38      NA #> 11026:  total  total    2022      16     2022-16 2021/2022         39      NA #> 11027:  total  total    2022      17     2022-17 2021/2022         40      NA #> 11028:  total  total    2022      18     2022-18 2021/2022         41      NA #>        calmonth calyearmonth       date covid19_cases_testdate_n #>           <int>       <char>     <Date>                    <int> #>     1:        2     2020-M02 2020-02-21                        0 #>     2:        2     2020-M02 2020-02-22                        0 #>     3:        2     2020-M02 2020-02-23                        0 #>     4:        2     2020-M02 2020-02-24                        0 #>     5:        2     2020-M02 2020-02-25                        0 #>    ---                                                           #> 11024:       NA         <NA> 2022-04-10                     6888 #> 11025:       NA         <NA> 2022-04-17                     3635 #> 11026:       NA         <NA> 2022-04-24                     3764 #> 11027:       NA         <NA> 2022-05-01                     2243 #> 11028:       NA         <NA> 2022-05-08                      502 #>        covid19_cases_testdate_pr100000 #>                                  <num> #>     1:                        0.000000 #>     2:                        0.000000 #>     3:                        0.000000 #>     4:                        0.000000 #>     5:                        0.000000 #>    ---                                 #> 11024:                      126.961423 #> 11025:                       67.001274 #> 11026:                       69.379036 #> 11027:                       41.343564 #> 11028:                        9.252996 #>  #> $hash #> $hash$current #> [1] \"f94ed40e7cee3cdea8d42ef836fb63cd\" #>  #> $hash$current_elements #> $hash$current_elements$data_1 #> [1] \"7f1b0a581386e75e907bffd94938a3a7\" #>  #> $hash$current_elements$data_2 #> [1] \"7f1b0a581386e75e907bffd94938a3a7\" #>  #> $hash$current_elements$data_3 #> [1] \"7f1b0a581386e75e907bffd94938a3a7\" #>  #>  #>   ## ------------------------------------------------ ## Method `Plan$add_argset` ## ------------------------------------------------  p <- plnr::Plan$new()  # Add argsets with different arguments p$add_argset(\"argset_1\", var_1 = 3, var_b = \"hello\") p$add_argset(\"argset_2\", var_1 = 8, var_c = \"hello2\")  # View added argsets p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_b  var_c #>           <char>          <int> <list> <list> <list> #> 1:      argset_1              1      3  hello        #> 2:      argset_2              2      8        hello2  ## ------------------------------------------------ ## Method `Plan$add_argset_from_df` ## ------------------------------------------------  p <- plnr::Plan$new()  # Create data frame of argsets batch_argset_df <- data.frame(   name = c(\"a\", \"b\", \"c\"),   var_1 = c(1, 2, 3),   var_2 = c(\"i\", \"j\", \"k\") )  # Add argsets from data frame p$add_argset_from_df(batch_argset_df)  # View added argsets p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_2 #>           <char>          <int> <list> <list> #> 1:             a              1      1      i #> 2:             b              2      2      j #> 3:             c              3      3      k  ## ------------------------------------------------ ## Method `Plan$add_argset_from_list` ## ------------------------------------------------  p <- plnr::Plan$new()  # Create list of argsets batch_argset_list <- list(   list(name = \"a\", var_1 = 1, var_2 = \"i\"),   list(name = \"b\", var_1 = 2, var_2 = \"j\"),   list(name = \"c\", var_1 = 3, var_2 = \"k\") )  # Add argsets from list p$add_argset_from_list(batch_argset_list)  # View added argsets p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_2 #>           <char>          <int> <list> <list> #> 1:             a              1      1      i #> 2:             b              2      2      j #> 3:             c              3      3      k  ## ------------------------------------------------ ## Method `Plan$add_analysis` ## ------------------------------------------------  p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Add analysis p$add_analysis(   name = \"analysis_1\",   fn_name = \"plnr::example_action_fn\" )  # View argsets and run analysis p$get_argsets_as_dt() #>    name_analysis index_analysis #>           <char>          <int> #> 1:    analysis_1              1 p$run_one(\"analysis_1\") #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"index_analysis\" #> [1] \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$add_analysis_from_df` ## ------------------------------------------------  p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Create data frame of analyses batch_argset_df <- data.frame(   name = c(\"a\", \"b\", \"c\"),   var_1 = c(1, 2, 3),   var_2 = c(\"i\", \"j\", \"k\") )  # Add analyses from data frame p$add_analysis_from_df(   fn_name = \"plnr::example_action_fn\",   df = batch_argset_df )  # View argsets and run example p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_2 #>           <char>          <int> <list> <list> #> 1:             a              1      1      i #> 2:             b              2      2      j #> 3:             c              3      3      k p$run_one(1) #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$add_analysis_from_list` ## ------------------------------------------------  p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Create list of analyses batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") )  # Add analyses from list p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list )  # View argsets and run example p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_2 #>           <char>          <int> <list> <list> #> 1:    analysis_1              1      1      i #> 2:    analysis_2              2      2      j #> 3:    analysis_3              3      3      k p$run_one(\"analysis_1\") #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$get_data` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") p$get_data() #> $covid_data #>        granularity_time granularity_geo country_iso3 location_code border #>                  <char>          <char>       <char>        <char>  <int> #>     1:              day          county          nor  county_nor03   2020 #>     2:              day          county          nor  county_nor03   2020 #>     3:              day          county          nor  county_nor03   2020 #>     4:              day          county          nor  county_nor03   2020 #>     5:              day          county          nor  county_nor03   2020 #>    ---                                                                    #> 11024:          isoweek          nation          nor    nation_nor   2020 #> 11025:          isoweek          nation          nor    nation_nor   2020 #> 11026:          isoweek          nation          nor    nation_nor   2020 #> 11027:          isoweek          nation          nor    nation_nor   2020 #> 11028:          isoweek          nation          nor    nation_nor   2020 #>           age    sex isoyear isoweek isoyearweek    season seasonweek calyear #>        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> #>     1:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     2:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     3:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     4:  total  total    2020       9     2020-09 2019/2020         32    2020 #>     5:  total  total    2020       9     2020-09 2019/2020         32    2020 #>    ---                                                                        #> 11024:  total  total    2022      14     2022-14 2021/2022         37      NA #> 11025:  total  total    2022      15     2022-15 2021/2022         38      NA #> 11026:  total  total    2022      16     2022-16 2021/2022         39      NA #> 11027:  total  total    2022      17     2022-17 2021/2022         40      NA #> 11028:  total  total    2022      18     2022-18 2021/2022         41      NA #>        calmonth calyearmonth       date covid19_cases_testdate_n #>           <int>       <char>     <Date>                    <int> #>     1:        2     2020-M02 2020-02-21                        0 #>     2:        2     2020-M02 2020-02-22                        0 #>     3:        2     2020-M02 2020-02-23                        0 #>     4:        2     2020-M02 2020-02-24                        0 #>     5:        2     2020-M02 2020-02-25                        0 #>    ---                                                           #> 11024:       NA         <NA> 2022-04-10                     6888 #> 11025:       NA         <NA> 2022-04-17                     3635 #> 11026:       NA         <NA> 2022-04-24                     3764 #> 11027:       NA         <NA> 2022-05-01                     2243 #> 11028:       NA         <NA> 2022-05-08                      502 #>        covid19_cases_testdate_pr100000 #>                                  <num> #>     1:                        0.000000 #>     2:                        0.000000 #>     3:                        0.000000 #>     4:                        0.000000 #>     5:                        0.000000 #>    ---                                 #> 11024:                      126.961423 #> 11025:                       67.001274 #> 11026:                       69.379036 #> 11027:                       41.343564 #> 11028:                        9.252996 #>  #> $hash #> $hash$current #> [1] \"18b3aa368375163b3eee188988c8c15c\" #>  #> $hash$current_elements #> $hash$current_elements$covid_data #> [1] \"7f1b0a581386e75e907bffd94938a3a7\" #>  #>  #>   ## ------------------------------------------------ ## Method `Plan$get_analysis` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$get_analysis(\"analysis_1\") #> $fn #> NULL #>  #> $fn_name #> [1] \"plnr::example_action_fn\" #>  #> $argset #> $argset$var_1 #> [1] 1 #>  #> $argset$var_2 #> [1] \"i\" #>  #> $argset$index_analysis #> [1] \"analysis_1\" #>  #>   ## ------------------------------------------------ ## Method `Plan$get_argset` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$get_argset(\"analysis_1\") #> $var_1 #> [1] 1 #>  #> $var_2 #> [1] \"i\" #>   ## ------------------------------------------------ ## Method `Plan$get_argsets_as_dt` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_2 #>           <char>          <int> <list> <list> #> 1:    analysis_1              1      1      i #> 2:    analysis_2              2      2      j #> 3:    analysis_3              3      3      k  ## ------------------------------------------------ ## Method `Plan$run_one_with_data` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) data <- p$get_data() p$run_one_with_data(\"analysis_1\", data) #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$run_one` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$run_one(\"analysis_1\") #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$run_all_with_data` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) data <- p$get_data() p$run_all_with_data(data) #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$run_all` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$run_all() #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\"  ## ------------------------------------------------ ## Method `Plan$run_all_progress` ## ------------------------------------------------  p <- plnr::Plan$new() p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\") batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") ) p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list ) p$run_all_progress() #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\""},{"path":"https://www.csids.no/plnr/reference/create_rmarkdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example R Markdown project structure — create_rmarkdown","title":"Create an example R Markdown project structure — create_rmarkdown","text":"function creates complete example project structure R Markdown analysis using plnr framework. sets standardized directory structure creates example files demonstrating use plnr data analysis report generation.","code":""},{"path":"https://www.csids.no/plnr/reference/create_rmarkdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example R Markdown project structure — create_rmarkdown","text":"","code":"create_rmarkdown(home)"},{"path":"https://www.csids.no/plnr/reference/create_rmarkdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example R Markdown project structure — create_rmarkdown","text":"home Character string, path project created","code":""},{"path":"https://www.csids.no/plnr/reference/create_rmarkdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example R Markdown project structure — create_rmarkdown","text":"NULL, creates files directories specified location","code":""},{"path":"https://www.csids.no/plnr/reference/create_rmarkdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an example R Markdown project structure — create_rmarkdown","text":"created project includes: main run.R script initializes project demonstrates plnr usage Example analysis functions R directory template R Markdown document Standard project directories (results, paper, raw)","code":""},{"path":"https://www.csids.no/plnr/reference/create_rmarkdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example R Markdown project structure — create_rmarkdown","text":"","code":"if (FALSE) { # \\dontrun{ # Create a temporary directory for the example temp_dir <- tempfile(\"plnr_example_\") create_rmarkdown(temp_dir)  # View the created structure list.files(temp_dir, recursive = TRUE) } # }"},{"path":"https://www.csids.no/plnr/reference/example_action_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Example action function for demonstrating analysis structure — example_action_fn","title":"Example action function for demonstrating analysis structure — example_action_fn","text":"function serves example structure action function use Plan class. simply prints names data argset components receives.","code":""},{"path":"https://www.csids.no/plnr/reference/example_action_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example action function for demonstrating analysis structure — example_action_fn","text":"","code":"example_action_fn(data, argset)"},{"path":"https://www.csids.no/plnr/reference/example_action_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example action function for demonstrating analysis structure — example_action_fn","text":"data named list containing datasets analysis argset named list containing arguments analysis","code":""},{"path":"https://www.csids.no/plnr/reference/example_action_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example action function for demonstrating analysis structure — example_action_fn","text":"NULL, prints information input data argset","code":""},{"path":"https://www.csids.no/plnr/reference/example_action_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example action function for demonstrating analysis structure — example_action_fn","text":"","code":"# Create a new plan p <- plnr::Plan$new()  # Add example data p$add_data(\"covid_data\", fn_name = \"plnr::example_data_fn_nor_covid19_cases_by_time_location\")  # Create batch of argsets batch_argset_list <- list(   list(name = \"analysis_1\", var_1 = 1, var_2 = \"i\"),   list(name = \"analysis_2\", var_1 = 2, var_2 = \"j\"),   list(name = \"analysis_3\", var_1 = 3, var_2 = \"k\") )  # Add analyses to plan p$add_analysis_from_list(   fn_name = \"plnr::example_action_fn\",   l = batch_argset_list )  # View argsets and run example p$get_argsets_as_dt() #>    name_analysis index_analysis  var_1  var_2 #>           <char>          <int> <list> <list> #> 1:    analysis_1              1      1      i #> 2:    analysis_2              2      2      j #> 3:    analysis_3              3      3      k p$run_one(\"analysis_1\") #> [1] \"Data given:\" #> [1] \"covid_data\" \"hash\"       #> [1] \"Argset given:\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\" #> [1] \"var_1\"          \"var_2\"          \"index_analysis\""},{"path":"https://www.csids.no/plnr/reference/example_data_fn_nor_covid19_cases_by_time_location.html","id":null,"dir":"Reference","previous_headings":"","what":"An example data_fn that returns a data set — example_data_fn_nor_covid19_cases_by_time_location","title":"An example data_fn that returns a data set — example_data_fn_nor_covid19_cases_by_time_location","text":"example data_fn returns data set","code":""},{"path":"https://www.csids.no/plnr/reference/example_data_fn_nor_covid19_cases_by_time_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example data_fn that returns a data set — example_data_fn_nor_covid19_cases_by_time_location","text":"","code":"example_data_fn_nor_covid19_cases_by_time_location()"},{"path":"https://www.csids.no/plnr/reference/expand_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a cross product of lists — expand_list","title":"Create a cross product of lists — expand_list","text":"function creates cross product multiple lists, similar purrr::cross() convenient interface require wrapping arguments extra list(). useful generating combinations parameters analysis.","code":""},{"path":"https://www.csids.no/plnr/reference/expand_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a cross product of lists — expand_list","text":"","code":"expand_list(...)"},{"path":"https://www.csids.no/plnr/reference/expand_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a cross product of lists — expand_list","text":"... Named arguments, containing vector list values combine","code":""},{"path":"https://www.csids.no/plnr/reference/expand_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a cross product of lists — expand_list","text":"list lists, inner list contains one combination values input arguments","code":""},{"path":"https://www.csids.no/plnr/reference/expand_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a cross product of lists — expand_list","text":"","code":"# Create combinations of parameters combinations <- plnr::expand_list(   a = 1:2,   b = c(\"a\", \"b\") )  # View the combinations str(combinations) #> List of 4 #>  $ :List of 2 #>   ..$ a: int 1 #>   ..$ b: chr \"a\" #>  $ :List of 2 #>   ..$ a: int 2 #>   ..$ b: chr \"a\" #>  $ :List of 2 #>   ..$ a: int 1 #>   ..$ b: chr \"b\" #>  $ :List of 2 #>   ..$ a: int 2 #>   ..$ b: chr \"b\"  # Compare with purrr::cross purrr::cross(list(   a = 1:2,   b = c(\"a\", \"b\") )) #> Warning: `cross()` was deprecated in purrr 1.0.0. #> ℹ Please use `tidyr::expand_grid()` instead. #> ℹ See <https://github.com/tidyverse/purrr/issues/768>. #> [[1]] #> [[1]]$a #> [1] 1 #>  #> [[1]]$b #> [1] \"a\" #>  #>  #> [[2]] #> [[2]]$a #> [1] 2 #>  #> [[2]]$b #> [1] \"a\" #>  #>  #> [[3]] #> [[3]]$a #> [1] 1 #>  #> [[3]]$b #> [1] \"b\" #>  #>  #> [[4]] #> [[4]]$a #> [1] 2 #>  #> [[4]]$b #> [1] \"b\" #>  #>"},{"path":"https://www.csids.no/plnr/reference/get_anything.html","id":null,"dir":"Reference","previous_headings":"","what":"Get objects with package namespace support — get_anything","title":"Get objects with package namespace support — get_anything","text":"function extends base::get() support package namespace scoping (e.g., \"pkg::var\"). particularly useful working package exports namespace-qualified objects.","code":""},{"path":"https://www.csids.no/plnr/reference/get_anything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get objects with package namespace support — get_anything","text":"","code":"get_anything(x)"},{"path":"https://www.csids.no/plnr/reference/get_anything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get objects with package namespace support — get_anything","text":"x Character string specifying object retrieve. Can either simple object name namespace-qualified name (e.g., \"pkg::var\")","code":""},{"path":"https://www.csids.no/plnr/reference/get_anything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get objects with package namespace support — get_anything","text":"requested object","code":""},{"path":"https://www.csids.no/plnr/reference/get_anything.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get objects with package namespace support — get_anything","text":"","code":"# Get a namespace-qualified object plnr::get_anything(\"plnr::nor_covid19_cases_by_time_location\") #>        granularity_time granularity_geo country_iso3 location_code border #>                  <char>          <char>       <char>        <char>  <int> #>     1:              day          county          nor  county_nor03   2020 #>     2:              day          county          nor  county_nor03   2020 #>     3:              day          county          nor  county_nor03   2020 #>     4:              day          county          nor  county_nor03   2020 #>     5:              day          county          nor  county_nor03   2020 #>    ---                                                                    #> 11024:          isoweek          nation          nor    nation_nor   2020 #> 11025:          isoweek          nation          nor    nation_nor   2020 #> 11026:          isoweek          nation          nor    nation_nor   2020 #> 11027:          isoweek          nation          nor    nation_nor   2020 #> 11028:          isoweek          nation          nor    nation_nor   2020 #>           age    sex isoyear isoweek isoyearweek    season seasonweek calyear #>        <char> <char>   <int>   <int>      <char>    <char>      <num>   <int> #>     1:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     2:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     3:  total  total    2020       8     2020-08 2019/2020         31    2020 #>     4:  total  total    2020       9     2020-09 2019/2020         32    2020 #>     5:  total  total    2020       9     2020-09 2019/2020         32    2020 #>    ---                                                                        #> 11024:  total  total    2022      14     2022-14 2021/2022         37      NA #> 11025:  total  total    2022      15     2022-15 2021/2022         38      NA #> 11026:  total  total    2022      16     2022-16 2021/2022         39      NA #> 11027:  total  total    2022      17     2022-17 2021/2022         40      NA #> 11028:  total  total    2022      18     2022-18 2021/2022         41      NA #>        calmonth calyearmonth       date covid19_cases_testdate_n #>           <int>       <char>     <Date>                    <int> #>     1:        2     2020-M02 2020-02-21                        0 #>     2:        2     2020-M02 2020-02-22                        0 #>     3:        2     2020-M02 2020-02-23                        0 #>     4:        2     2020-M02 2020-02-24                        0 #>     5:        2     2020-M02 2020-02-25                        0 #>    ---                                                           #> 11024:       NA         <NA> 2022-04-10                     6888 #> 11025:       NA         <NA> 2022-04-17                     3635 #> 11026:       NA         <NA> 2022-04-24                     3764 #> 11027:       NA         <NA> 2022-05-01                     2243 #> 11028:       NA         <NA> 2022-05-08                      502 #>        covid19_cases_testdate_pr100000 #>                                  <num> #>     1:                        0.000000 #>     2:                        0.000000 #>     3:                        0.000000 #>     4:                        0.000000 #>     5:                        0.000000 #>    ---                                 #> 11024:                      126.961423 #> 11025:                       67.001274 #> 11026:                       69.379036 #> 11027:                       41.343564 #> 11028:                        9.252996  # Get a simple object (same as base::get) x <- 1 get_anything(\"x\") #> [1] \"x\""},{"path":"https://www.csids.no/plnr/reference/hash_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a hash of an object — hash_it","title":"Generate a hash of an object — hash_it","text":"Internal function create hash object using digest package.","code":""},{"path":"https://www.csids.no/plnr/reference/hash_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a hash of an object — hash_it","text":"","code":"hash_it(x)"},{"path":"https://www.csids.no/plnr/reference/hash_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a hash of an object — hash_it","text":"x object hash","code":""},{"path":"https://www.csids.no/plnr/reference/hash_it.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a hash of an object — hash_it","text":"character string containing hash","code":""},{"path":"https://www.csids.no/plnr/reference/is_run_directly.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if code is being run directly or from within a function — is_run_directly","title":"Check if code is being run directly or from within a function — is_run_directly","text":"function determines whether code executed directly global environment within function call. particularly useful development debugging purposes, allowing functions behave differently run directly versus called part larger analysis plan.","code":""},{"path":"https://www.csids.no/plnr/reference/is_run_directly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if code is being run directly or from within a function — is_run_directly","text":"","code":"is_run_directly()"},{"path":"https://www.csids.no/plnr/reference/is_run_directly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if code is being run directly or from within a function — is_run_directly","text":"logical value: TRUE code run directly (.e., global environment), FALSE run within function call","code":""},{"path":"https://www.csids.no/plnr/reference/is_run_directly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if code is being run directly or from within a function — is_run_directly","text":"","code":"# When run directly is_run_directly()  # TRUE #> [1] FALSE  # When run from within a function test_fn <- function() {   is_run_directly()  # FALSE } test_fn() #> [1] FALSE"},{"path":"https://www.csids.no/plnr/reference/nor_covid19_cases_by_time_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location","text":"data comes Norwegian Surveillance System Communicable Diseases (MSIS). date corresponds PCR-test taken.","code":""},{"path":"https://www.csids.no/plnr/reference/nor_covid19_cases_by_time_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location","text":"","code":"nor_covid19_cases_by_time_location"},{"path":"https://www.csids.no/plnr/reference/nor_covid19_cases_by_time_location.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location","text":"csfmt_rts_data_v1 11028 rows 18 variables: granularity_time day/isoweek granularity_geo nation, county country_iso3 location_code norge, 11 counties border 2020 age total isoyear Isoyear event isoweek Isoweek event isoyearweek Isoyearweek event season Season event seasonweek Seasonweek event calyear Calyear event calmonth Calmonth event calyearmonth Calyearmonth event date Date event covid19_cases_testdate_n Number confirmed covid19 cases covid19_cases_testdate_pr100000 Number confirmed covid19 cases per 100.000 population","code":""},{"path":"https://www.csids.no/plnr/reference/nor_covid19_cases_by_time_location.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location","text":"https://github.com/folkehelseinstituttet/surveillance_data/blob/master/covid19/_DOCUMENTATION_data_covid19_msis_by_time_location.txt","code":""},{"path":"https://www.csids.no/plnr/reference/nor_covid19_cases_by_time_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location","text":"raw number cases cases per 100.000 population recorded. data extracted 2022-05-04.","code":""},{"path":"https://www.csids.no/plnr/reference/set_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set package configuration options — set_opts","title":"Set package configuration options — set_opts","text":"function allows users configure package-wide options, verbosity output messages. modifies package's internal configuration state.","code":""},{"path":"https://www.csids.no/plnr/reference/set_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set package configuration options — set_opts","text":"","code":"set_opts(force_verbose = FALSE)"},{"path":"https://www.csids.no/plnr/reference/set_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set package configuration options — set_opts","text":"force_verbose Logical, whether force verbose output messages regardless interactive state. Defaults FALSE","code":""},{"path":"https://www.csids.no/plnr/reference/set_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set package configuration options — set_opts","text":"NULL, modifies package's internal configuration","code":""},{"path":"https://www.csids.no/plnr/reference/set_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set package configuration options — set_opts","text":"","code":"# Enable verbose output set_opts(force_verbose = TRUE)  # Disable verbose output set_opts(force_verbose = FALSE)"},{"path":"https://www.csids.no/plnr/reference/test_action_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Test action function that returns a constant value — test_action_fn","title":"Test action function that returns a constant value — test_action_fn","text":"simple test function always returns 1, useful testing Plan framework's functionality.","code":""},{"path":"https://www.csids.no/plnr/reference/test_action_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test action function that returns a constant value — test_action_fn","text":"","code":"test_action_fn(data, argset)"},{"path":"https://www.csids.no/plnr/reference/test_action_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test action function that returns a constant value — test_action_fn","text":"data named list containing datasets (unused example) argset named list containing arguments (unused example)","code":""},{"path":"https://www.csids.no/plnr/reference/test_action_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test action function that returns a constant value — test_action_fn","text":"integer 1","code":""},{"path":"https://www.csids.no/plnr/reference/try_again.html","id":null,"dir":"Reference","previous_headings":"","what":"Retry code execution with exponential backoff — try_again","title":"Retry code execution with exponential backoff — try_again","text":"function attempts execute code multiple times random delays attempts. particularly useful handling transient failures operations may succeed subsequent attempts, network requests file operations.","code":""},{"path":"https://www.csids.no/plnr/reference/try_again.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retry code execution with exponential backoff — try_again","text":"","code":"try_again(   x,   times = 2,   delay_seconds_min = 5,   delay_seconds_max = 10,   verbose = FALSE )"},{"path":"https://www.csids.no/plnr/reference/try_again.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retry code execution with exponential backoff — try_again","text":"x code execute (expression) times Integer, maximum number attempts make. Defaults 2 delay_seconds_min Numeric, minimum delay seconds attempts. Defaults 5 delay_seconds_max Numeric, maximum delay seconds attempts. Defaults 10 verbose Logical, whether show progress information. Defaults FALSE","code":""},{"path":"https://www.csids.no/plnr/reference/try_again.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retry code execution with exponential backoff — try_again","text":"TRUE invisibly successful, otherwise throws error last error message","code":""},{"path":"https://www.csids.no/plnr/reference/try_again.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retry code execution with exponential backoff — try_again","text":"function adapted try_again function testthat package, additional features controlling retry behavior verbosity.","code":""},{"path":"https://www.csids.no/plnr/reference/try_again.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retry code execution with exponential backoff — try_again","text":"","code":"if (FALSE) { # \\dontrun{ # Try a simple operation try_again({   # Your code here   stop(\"Simulated error\") }, times = 3, verbose = TRUE)  # Try with custom delays try_again({   # Your code here   stop(\"Simulated error\") }, delay_seconds_min = 1, delay_seconds_max = 3) } # }"},{"path":"https://www.csids.no/plnr/reference/uuid_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a UUID — uuid_generator","title":"Generate a UUID — uuid_generator","text":"Internal function generate unique identifier using uuid package.","code":""},{"path":"https://www.csids.no/plnr/reference/uuid_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a UUID — uuid_generator","text":"","code":"uuid_generator()"},{"path":"https://www.csids.no/plnr/reference/uuid_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a UUID — uuid_generator","text":"character string containing UUID","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-2025319","dir":"Changelog","previous_headings":"","what":"Version 2025.3.19","title":"Version 2025.3.19","text":"Enhanced Plan class documentation better structure clearer explanations Improved method documentation detailed parameter descriptions examples Added comprehensive documentation internal functions Enhanced documentation utility functions (is_run_directly, get_anything, expand_list) Added detailed examples usage patterns functions Improved clarity consistency across documentation","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-2024118","dir":"Changelog","previous_headings":"","what":"Version 2024.1.18","title":"Version 2024.1.18","text":"plan$run_all_parallel public method created.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-202268","dir":"Changelog","previous_headings":"","what":"Version 2022.6.8","title":"Version 2022.6.8","text":"CRAN release: 2022-06-09 plan$set_use_foreach public method created","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-202267","dir":"Changelog","previous_headings":"","what":"Version 2022.6.7","title":"Version 2022.6.7","text":"CRAN submission Additional documentation Moving plan public fields private","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-2022527","dir":"Changelog","previous_headings":"","what":"Version 2022.5.27","title":"Version 2022.5.27","text":"Including new vignette explaining add analyses plan.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-202246","dir":"Changelog","previous_headings":"","what":"Version 2022.4.6","title":"Version 2022.4.6","text":"Inclusion hash functions get_data.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-202169","dir":"Changelog","previous_headings":"","what":"Version 2021.6.9","title":"Version 2021.6.9","text":"Inclusion easy_split.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-2020511","dir":"Changelog","previous_headings":"","what":"Version 2020.5.11","title":"Version 2020.5.11","text":"fn_name can now take package::function_name arguments.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-202054","dir":"Changelog","previous_headings":"","what":"Version 2020.5.4","title":"Version 2020.5.4","text":"is_run_directly function created, allowing user see code run directly within function.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-202043","dir":"Changelog","previous_headings":"","what":"Version 2020.4.3","title":"Version 2020.4.3","text":"set_opts function created, allowing force_verbose set package wide.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-2020220","dir":"Changelog","previous_headings":"","what":"Version 2020.2.20","title":"Version 2020.2.20","text":"create_rmarkdown skeleton created.","code":""},{"path":"https://www.csids.no/plnr/news/index.html","id":"version-2020128","dir":"Changelog","previous_headings":"","what":"Version 2020.1.28","title":"Version 2020.1.28","text":"parallel_possible variable initializing new Plan.","code":""}]
